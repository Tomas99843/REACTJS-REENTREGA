PROYECTO FINAL:

desarrollar una app de un e-commmerce para poder vender productos de un rubro a eleccion.

user story:
-un usuario debe poder ingresar, vavegar por los productos e ir a sus detalles
-desde el detalle se ebe poder ver la descripcion, foto y precio e ingresarlo al carrito
-una vez que el carrito tenga al menos un productos, se debera visualizar un listado compacto de la orden con el precio total
-al ingresar su nombre,apellid,telefono,email(ingresandolo dos veces para corroborar que sea correcto) debe activarse el boton de realizar compra
-al clickear realizar comra debe guardarse en la base de dato una orden que tenga todos  los pdoructos la fecha y dar feedback del numero de orden

piezas sugeridas:
-NavBar
-CartWidgte
-ItemListContainer
-ItemDetail
 -ItemQuantitySelector
 -Description
 -AddItemButton
-Checkout
 -Brief(detalle de compra)

requisitos base:
-Inicio:Al momento d eingresar a la app en la ruta base /
 -visualizar como minimo un set de productos disponibles para la compra
 -contar con algun acceso visible a la lista de carrito que debe alojarse en el route/Cart
 -Acceder a un menu desplegable que contendra las categorias. AÃ± clickear en una, debe navegar a la lista de productos de la misma mediante un rout/categories/:categoryID. este invocara la misma vista que el home, peoro visualizando solamente productos de esa categorias

-Flow:Al clickear un item del listado debe navegar a la ruta /item/id donde id es el id del item (generado por firebase) y ver la descripcion del producto (foto precio selector de cantidad).Si se ingresa a Itemd/:id y el producto no existe en firebase, debemos responder un mensaje adecuado que indique algo relacion a que el productos no existe.

-Firebase:
 -Implementar al menos dos colecciones:
  -item: catalogo completo
    -link para foto (puede almacenarce de modo estatico en la pagina en una subruta /images/:itemid de todas formas no es obligatorio)
    -precio unitario
    -descriopcion(solo ve en detalle)
    -categoria(id a mano para version estatica o id de firebase para version dinamica-opcional-)
  -Order:las ordenes generadas que deben incluis los productos, descipciones  y los precios al momento de la compra 
    -las ordene deben poder tener items surtidos cada uno con su cantidad. por ejemplo remeras x 2 y gorra x 1
    -id,items,fecha,estado(por defecto en generada)
  -Categories(solo para version dinamica-opcional-): version dinamica. crear una coleccion de categories en firebase para hidratar el menu y usar los id's de estos para linkearlo a sus items. Idealmente, categories/:id deberia tener una descripcion {id:ad43k348j,key:calzado,description:calzado}
para que quede /categories/calzado en lugar de /categories/ad43k348j

-Cart:El cart debe ser accesible durante toda la experiencia y tener una indcaicon d ela cantidad de items incluidos agregados (ej. si hay un item con dos unidades y un item con una unidad, debe decir tres)

-Checkout minimo:
 -Items con sus cantidades
 -Total de la orden
 -INput para nombre, apellido y telefono
 -Input para email y logica de repetir el email 2 veces (a excepcion de que realicen el desafio extra de auth, en ese caso no seria necesario )
 -Finalizada la orden debo recibir mi order id con el id del objeto de firebase
 -La navegabilidad debe ocurrir utilizando el router y no href's o location
 -Por cada libreria publica extra que utilices deberas incluir en algun archivo el link al proyecto, y una justifcacion de porque agregar valor
 -Readme.md:El archivo debe estar en el root del proyecto para dar una breve introduccion acerca de su priyecto y que ideas o enfoque eligio para el mismo, Si incluyo dependencia extra por np, (por fuera de las trabajadas en clase)aparte debe hacer un resumen explicando sus deciosiones.


>node_modules
>public/
      >images/
>src/
  >assets/
        >react.svg
  >components/
            >Cart/
                >CartWidget.css
                >CartWidget.jsx
            >Counter/
                   >Counter.css
                   >Counter.jsx
            >Item/
                >Itemm.css
                >Item.jsx
                >ItemDetail.css
                >ItemDetail.jsx
                >ItemList.css
                >ItemList.jsx
            >NavBar/
                  >NavBar.css
                  >NavBar.jsx
  >containers/
            >ErrorMessage.jsx
            >ItemDetailContainer.css
            >ItemDetailContainer.jsx
            >ItemListContainer.css
            >ItemListContainer.jsx
            >Loader.css
            >Loader.jsx
  >context/
         >CartContext.jsx
  >pages/
       >CartPages.css
       >CartPage.jsx
       >CategoryPage.jsx
       >ItemDetailPage.jsx
       >SearchPage.css
       >SearchPage.jsx
       >CheckoutPage.css
       >CheckoutPage.jsx
  >services/
          >products.js
          >firebase.js
          >orders.js
  >styles/
        >App.css
        >index.css
App.jsx
main.jsx
.gitignore
eslint.config.js
index.html
package-lock.json
package.json
README.md
vite.config.js